<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljw.dubbo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.ljw.dubbo.model.User">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="user_pass" jdbcType="VARCHAR" property="userPass" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="group_id" jdbcType="TINYINT" property="groupId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="unban_time" jdbcType="INTEGER" property="unbanTime" />
    <result column="expiration_time" jdbcType="INTEGER" property="expirationTime" />
    <result column="logincount" jdbcType="INTEGER" property="logincount" />
    <result column="lastlogin" jdbcType="TIMESTAMP" property="lastlogin" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="birthdate" jdbcType="DATE" property="birthdate" />
    <result column="character_slots" jdbcType="TINYINT" property="characterSlots" />
    <result column="pincode" jdbcType="VARCHAR" property="pincode" />
    <result column="pincode_change" jdbcType="INTEGER" property="pincodeChange" />
    <result column="bank_vault" jdbcType="INTEGER" property="bankVault" />
    <result column="vip_time" jdbcType="INTEGER" property="vipTime" />
    <result column="old_group" jdbcType="TINYINT" property="oldGroup" />
  </resultMap>
  <sql id="Base_Column_List">
    account_id, userid, user_pass, sex, email, group_id, state, unban_time, expiration_time, 
    logincount, lastlogin, last_ip, birthdate, character_slots, pincode, pincode_change, 
    bank_vault, vip_time, old_group
  </sql>
  <select id="selectAllUser"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from login
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljw.dubbo.model.User">
    insert into login (account_id, userid, user_pass, 
      sex, email, group_id, state, 
      unban_time, expiration_time, logincount, 
      lastlogin, last_ip, birthdate, 
      character_slots, pincode, pincode_change, 
      bank_vault, vip_time, old_group
      )
    values (#{accountId,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{groupId,jdbcType=TINYINT}, #{state,jdbcType=INTEGER}, 
      #{unbanTime,jdbcType=INTEGER}, #{expirationTime,jdbcType=INTEGER}, #{logincount,jdbcType=INTEGER}, 
      #{lastlogin,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}, #{birthdate,jdbcType=DATE}, 
      #{characterSlots,jdbcType=TINYINT}, #{pincode,jdbcType=VARCHAR}, #{pincodeChange,jdbcType=INTEGER}, 
      #{bankVault,jdbcType=INTEGER}, #{vipTime,jdbcType=INTEGER}, #{oldGroup,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ljw.dubbo.model.User">
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="userPass != null">
        user_pass,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="unbanTime != null">
        unban_time,
      </if>
      <if test="expirationTime != null">
        expiration_time,
      </if>
      <if test="logincount != null">
        logincount,
      </if>
      <if test="lastlogin != null">
        lastlogin,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="characterSlots != null">
        character_slots,
      </if>
      <if test="pincode != null">
        pincode,
      </if>
      <if test="pincodeChange != null">
        pincode_change,
      </if>
      <if test="bankVault != null">
        bank_vault,
      </if>
      <if test="vipTime != null">
        vip_time,
      </if>
      <if test="oldGroup != null">
        old_group,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="unbanTime != null">
        #{unbanTime,jdbcType=INTEGER},
      </if>
      <if test="expirationTime != null">
        #{expirationTime,jdbcType=INTEGER},
      </if>
      <if test="logincount != null">
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="lastlogin != null">
        #{lastlogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=DATE},
      </if>
      <if test="characterSlots != null">
        #{characterSlots,jdbcType=TINYINT},
      </if>
      <if test="pincode != null">
        #{pincode,jdbcType=VARCHAR},
      </if>
      <if test="pincodeChange != null">
        #{pincodeChange,jdbcType=INTEGER},
      </if>
      <if test="bankVault != null">
        #{bankVault,jdbcType=INTEGER},
      </if>
      <if test="vipTime != null">
        #{vipTime,jdbcType=INTEGER},
      </if>
      <if test="oldGroup != null">
        #{oldGroup,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljw.dubbo.model.User">
    update login
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="unbanTime != null">
        unban_time = #{unbanTime,jdbcType=INTEGER},
      </if>
      <if test="expirationTime != null">
        expiration_time = #{expirationTime,jdbcType=INTEGER},
      </if>
      <if test="logincount != null">
        logincount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="lastlogin != null">
        lastlogin = #{lastlogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=DATE},
      </if>
      <if test="characterSlots != null">
        character_slots = #{characterSlots,jdbcType=TINYINT},
      </if>
      <if test="pincode != null">
        pincode = #{pincode,jdbcType=VARCHAR},
      </if>
      <if test="pincodeChange != null">
        pincode_change = #{pincodeChange,jdbcType=INTEGER},
      </if>
      <if test="bankVault != null">
        bank_vault = #{bankVault,jdbcType=INTEGER},
      </if>
      <if test="vipTime != null">
        vip_time = #{vipTime,jdbcType=INTEGER},
      </if>
      <if test="oldGroup != null">
        old_group = #{oldGroup,jdbcType=TINYINT},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljw.dubbo.model.User">
    update login
    set userid = #{userid,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=TINYINT},
      state = #{state,jdbcType=INTEGER},
      unban_time = #{unbanTime,jdbcType=INTEGER},
      expiration_time = #{expirationTime,jdbcType=INTEGER},
      logincount = #{logincount,jdbcType=INTEGER},
      lastlogin = #{lastlogin,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      birthdate = #{birthdate,jdbcType=DATE},
      character_slots = #{characterSlots,jdbcType=TINYINT},
      pincode = #{pincode,jdbcType=VARCHAR},
      pincode_change = #{pincodeChange,jdbcType=INTEGER},
      bank_vault = #{bankVault,jdbcType=INTEGER},
      vip_time = #{vipTime,jdbcType=INTEGER},
      old_group = #{oldGroup,jdbcType=TINYINT}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>